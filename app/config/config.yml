imports:
    - { resource: security.yml }
    - { resource: services.yml }

parameters:
      locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true
    serializer:
        enabled: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/../var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

easy_admin:
    site_name: 'BMG Tatoo'
    design:
      color_scheme: 'dark'
      brand_color: '#000000'
      form_theme: ['horizontal', 'VichUploaderBundle:Form:fields.html.twig','@EasyAdmin/form/bootstrap_3_horizontal_layout.html.twig']

    formats:
      date:     'd/m/Y'
      time:     'H:i'
      datetime: 'd/m/Y H:i:s'

    entities:
        Article:
            class: AppBundle\Entity\Article
            label: 'Статьи'
            list:
              title: 'Все статьи'
              fields:
                    - id
                    - { property: 'title', type: 'text' }
                    - { property: 'text', type: 'text' }
                    - { property: 'author'}
                    - { property: 'category'}
                    - { property: 'image', type: 'image' }
            show:
              fields:
                    - { property: 'image', type: 'image'}
            form:
              fields:
                  - { property: 'title', type: 'text' }
                  - { property: 'text', type: 'textarea' }
                  - { property: 'author'}
                  - { property: 'category'}
                  - { property: 'imageFile', type: 'vich_file' }
        Person:
            class: AppBundle\Entity\Person
            label: 'Персонал'
            list:
              title: 'Весь персонал'

        Tattoo:
            class: AppBundle\Entity\Tattoo
            label: 'Портфолио'
            list:
              title: 'Все тату'
              fields:
                  - { property: 'title', type: 'text' }
                  - { property: 'description', type: 'text' }
                  - { property: 'author'}
                  - { property: 'updateAt', type: 'datetime'}
                  - { property: 'image', type: 'image' }

            form:
              fields:
                  - { property: 'title', type: 'text' }
                  - { property: 'description', type: 'text' }
                  - { property: 'author'}
                  - { property: 'imageFile', type: 'vich_file' }

vich_uploader:
    db_driver: orm
    storage:   gaufrette

    mappings:
        article_images:
            uri_prefix:         ~
            upload_destination: article_images
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true

        tattoo_images:
            uri_prefix:         ~
            upload_destination: tattoo_images
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true

        esquisse_images:
            uri_prefix:         ~
            upload_destination: esquisse_images
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true

knp_gaufrette:
    stream_wrapper: ~
    adapters:
        article:
            aws_s3:
                service_id: 'aws.s3'
                bucket_name: 'bmgtattoo-bucket'
                options:
                    create: true
                    directory: article_photos

        tattoo:
            aws_s3:
                service_id: 'aws.s3'
                bucket_name: 'bmgtattoo-bucket'
                options:
                    create : true
                    directory: tattoo_photos

        esquisse:
            aws_s3:
                service_id: 'aws.s3'
                bucket_name: 'bmgtattoo-bucket'
                options:
                    create : true
                    directory: esquisse_photos

    filesystems:
        article_images:
                adapter: article

        tattoo_images:
                adapter: tattoo

        esquisse_images:
                adapter: esquisse
aws:
    version: latest
    region: '%aws_region%'
    credentials:
        key: '%aws_key%'
        secret: "%aws_secret_key%"
    S3:
        version: '2006-03-01'